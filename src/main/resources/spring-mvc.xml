<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
http://www.springframework.org/schema/beans/spring-beans.xsd 
http://www.springframework.org/schema/context 
http://www.springframework.org/schema/context/spring-context.xsd 
http://www.springframework.org/schema/mvc 
http://www.springframework.org/schema/mvc/spring-mvc.xsd">

	<!-- 自动扫描controller包下的所有类，使其认为spring mvc的控制器 -->
	<context:component-scan base-package="cn.wchwu.web.controller"></context:component-scan>
	
	<!-- 避免IE执行AJAX时,返回JSON出现下载文件 -->
	<bean id="fastJsonHttpMessageConverter"
		class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
				<value>application/json;charset=UTF-8</value>
			</list>
		</property>
	</bean>
	
	<!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->
	<mvc:annotation-driven>
		<mvc:message-converters>
			<bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter"/>  
			<ref bean="fastJsonHttpMessageConverter" /><!-- json转换器 -->
		</mvc:message-converters>
		<mvc:argument-resolvers>
			<bean
				class="cn.wchwu.framework.spring.mvc.method.annotation.FormModelMethodArgumentResolver" />
		</mvc:argument-resolvers>
	</mvc:annotation-driven>
		
	<!-- 对模型视图名称的解析，即在模型视图名称添加前后缀 -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"
		p:prefix="/" p:suffix=".jsp" />
	
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding">
			<value>UTF-8</value>
		</property>
		<property name="maxUploadSize">
			<value>32505856</value><!-- 上传文件大小限制为31M，31*1024*1024 -->
		</property>
		<property name="maxInMemorySize">
			<value>4096</value>
		</property>
	</bean>
	
	 <!-- 异常控制 -->
	<bean id="exceptionResolver"
		class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="defaultErrorView" value="/exception" />
		<property name="exceptionMappings">
			<props>
				<prop key="java.lang.Exception">/exception</prop>
			</props>
		</property>
		<property name="warnLogCategory">
			<value>org.springframework.web.servlet.handler.SimpleMappingExceptionResolver</value>
		</property>
	</bean>
	
	<mvc:interceptors>
		<!-- 使用bean定义一个Interceptor，直接定义在mvc:interceptors根下面的Interceptor将拦截所有的请求 -->
		<bean class="cn.wchwu.web.interceptor.StopWatchHandlerInterceptor" />

		<!-- 业务日志 只能拦截.action结尾的请求 -->
		<mvc:interceptor>
			<mvc:mapping path="/**/*.action" />
			<bean class="cn.wchwu.web.interceptor.BizLogInterceptor" />
		</mvc:interceptor>
		<!-- 定义在mvc:interceptor下面的表示是对特定的请求才进行拦截的 <mvc:interceptor> <mvc:mapping 
			path="/" /> <bean class="cn.wchwu.web.interceptor.HandlerInterceptor"></bean> 
			</mvc:interceptor> -->
	</mvc:interceptors>
	

</beans>